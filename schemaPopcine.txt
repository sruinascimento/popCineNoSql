//required: ["titulo", "sinopse", "duracao", "dataEstreia", "classificacao", "genero", "elenco", "diretor"],
////////////////////////////////////////////
let schemaMovie = {
    required: ["titulo", "sinopse", "duracao", "dataEstreia", "classificacao", "genero", "elenco", "diretor"],
    properties: {
        "titulo": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "sinopse": {
            bsonType: "string",
            description: "must be a string and required"

        },
        "duracao": {
            bsonType: "int",
            description: "must be an int value and required"        
        },
        "dataEstreia": {
            bsonType: "date",
            description: "must be a date type and required"        
        },
        "classificacao": {
            bsonType: "string",
            description: "must be a string and required",
            enum: [
                "Livre", "10 anos", "12 anos", 
                "14 anos", "16 anos", " 18 anos", 
            ]        

        },
        "orcamento": {
            bsonType: "double",
            description: "must be a double value"
        },
        "bilheteria": {
            bsonType: "double",
            description: "must be a double value"
            
        },
        "genero": {
            bsonType: "array",
            description: "must be a string and required"
            
        },
        "elenco": {
            bsonType: "array",
            description: "must be a string array and required"

        },
        "diretor": {
            bsonType: "string",
            description: "must be a string and required"
        }

    }
}
db.createCollection("movie", {validator: {$jsonSchema: schemaMovie}})
//index de genero

db.movie.insertOne({
    "titulo": "Viúva Negra",
    "sinopse": "Natasha Romanoff, também conhecida como Viúva Negra, confronta o lado mais sombrio de sua história quando surge uma perigosa conspiração ligada ao seu passado. Perseguida por uma força implacável disposta a tudo para destruí-la, Natasha precisa agora lidar com seu passado como espiã e com as relações que deixou para trás muito antes de se tornar uma Vingadora.",
    "duracao": 135,
    "dataEstreia": new Date("2021-07-08"),
    "classificacao": "12 anos",
    "orcamento": Double(200000000),
    "bilheteria": Double(369811000),
    "genero": ["Ação", "Suspense"],
    "elenco": ["Natasha Romanoff"],
    "diretor": "Dwayne Jhonson"
});
db.movie.insertOne({
    "titulo": "Se beber, Não Case! Parte III",
    "sinopse": "Depois da morte do pai, Alan decide ir para New Horizons com Phil, Stu e Doug, mas a viagem acaba sendo bruscamente interrompida pelos capangas de Marshall.",
    "duracao": 100,
    "dataEstreia": new Date("2013-10-08"),
    "classificacao": "16 anos",
    "orcamento": Double(100000000),
    "bilheteria": Double(362811000),
    "genero": ["Ação"],
    "elenco": ["Bradley Cooper", "Ed Helms", "Ken Jeong", "Zach"],
    "diretor": "Todd Phillips"
});

db.movie.insertOne({
    "titulo": "Shazam",
    "sinopse": "Billy Batson tem apenas 14 anos de idade, mas recebeu de um antigo mago o dom de se transformar em um super-herói adulto chamado Shazam. Ao gritar a palavra SHAZAM!",
    "duracao": 132,
    "dataEstreia": new Date("2019-04-04"),
    "classificacao": "16 anos",
    "orcamento": Double(100000000),
    "bilheteria": Double(366811000),
    "genero": ["Ação", "Comédia"],
    "elenco": ["Zachary Levi", "Asher Angel", "Jack Dylan Grazer", "Mark Strong"],
    "diretor": "David F. Sandberg"
});


db.movie.insertOne({
    "titulo": "Venom Tempo de Carnificina",
    "sinopse": "O relacionamento entre Eddie e Venom (Tom Hardy) está evoluindo. Buscando a melhor forma de lidar com a inevitável simbiose, esse dois lados descobrem como viver juntos e, de alguma forma, se tornarem melhores juntos do que separados.",
    "duracao": 97,
    "dataEstreia": new Date("2021-10-07"),
    "classificacao": "14 anos",
    "orcamento": Double(110000000),
    "bilheteria": Double(424000000),
    "genero": ["Ficção Científica", "Ação", "Aventura"],
    "elenco": ["Tom Hardy", "Michelle Williams", "Reid Scott", "Peggy Lu", "Woody Harrelson", "Naomie Harris", "Stephen Graham", "Sian Webber"],
    "diretor": "Andy Serkis"
});


db.movie.insertOne({
    "titulo": "Se beber, Não Case! Parte III",
    "sinopse": "Depois da morte do pai, Alan decide ir para New Horizons com Phil, Stu e Doug, mas a viagem acaba sendo bruscamente interrompida pelos capangas de Marshall.",
    "duracao": 100,
    "dataEstreia": new Date("2013-10-08"),
    "classificacao": "16 anos",
    "orcamento": Double(100000000),
    "bilheteria": Double(362811000),
    "genero": ["Ação"],
    "elenco": ["Bradley Cooper", "Ed Helms", "Ken Jeong", "Zach"],
    "diretor": "Todd Phillips"
});

db.movie.insertOne({
    "titulo": "Shazam",
    "sinopse": "Billy Batson tem apenas 14 anos de idade, mas recebeu de um antigo mago o dom de se transformar em um super-herói adulto chamado Shazam. Ao gritar a palavra SHAZAM!",
    "duracao": 132,
    "dataEstreia": new Date("2019-04-04"),
    "classificacao": "16 anos",
    "orcamento": Double(100000000),
    "bilheteria": Double(366811000),
    "genero": ["Ação", "Comédia"],
    "elenco": ["Zachary Levi", "Asher Angel", "Jack Dylan Grazer", "Mark Strong"],
    "diretor": "David F. Sandberg"
});


db.movie.insertOne({
    "titulo": "Velozes & Furiosos 9",
    "sinopse": "Dominic Toretto e sua família precisam enfrentar o seu irmão mais novo Jakob, um assassino mortal que está trabalhando com uma antiga inimiga, a cyber-terrorista Cipher.",
    "duracao": 145,
    "dataEstreia": new Date("2021-06-24"),
    "classificacao": "14 anos",
    "orcamento": Double(200000000),
    "bilheteria": Double(704238000),
    "genero": ["Ação", "Suspense", "Crime"],
    "elenco": ["Vin Diesel", "Natalie Emmanuel", "John Cena", "Jordana Brewster", "Michelle Rodriguez"],
    "diretor": "Justin Lin"
});

db.movie.insert({
    "titulo": "Star Wars: Episódio IX",
    "sinopse": "Com o retorno do Imperador Palpatine, a Resistência toma a frente da batalha. Treinando para ser uma completa Jedi, Rey se encontra em conflito com passado e futuro, e teme pelas respostas que pode conseguir com Kylo Ren.",
    "duracao": NumberInt(142),
    "dataEstreia": new Date("2019-12-19"),
    "classificacao": "10 anos",
    "orcamento": 250000000,
    "bilheteria": 1074140000,
    "genero": ['Ação', 'Aventura', 'Ficção', 'Científica'],
    "elenco": ['Carrie Fisher', 'Daisy Ridley', 'John Boyega', 'Anthony Daniels', 'Mark Hamill', 'Adam Driver', 'Oscar Isaac', 'Naomi Ackie'],
    "diretor": 'J.J. Abrams'
});


db.movie.insert({
    "titulo": "Free Guy Assumindo o Controle",
    "sinopse": "Um caixa de banco preso a uma entediante rotina tem sua vida virada de cabeça para baixo quando ele descobre que é personagem em um brutalmente realista vídeo game de mundo aberto. Agora ele precisa aceitar sua realidade e lidar com o fato de que é o único que pode salvar o mundo.",
    "duracao": NumberInt(115),
    "dataEstreia": new Date("2021-08-19"),
    "classificacao": "12 anos",
    "orcamento": 110000000,
    "bilheteria": 317000000,
    "genero": ['Comédia', 'Ação', 'Aventura', 'Ficção Científica'],
    "elenco": ['Ryan Reynolds', 'Joe Keery', 'Utkarsh Ambudkar', 'Channing Tatum', 'Jodie Comer',' Lil Rel Howery', 'Taika Waititi',' Aaron W Reed'],
    "diretor": 'Shawn Levy'
});

db.movie.insert({
    "titulo": "Eternos",
    "sinopse": "Após os eventos de “Vingadores: Ultimato”, os Eternos, uma raça alienígena imortal criada pelos Celestiais que vivem em segredo na Terra há mais de 7000 anos, se reúnem após uma tragédia inesperada para proteger a humanidade de seus colegas malignos: os Deviantes.",
    "duracao": NumberInt(157),
    "dataEstreia": new Date("2021-11-04"),
    "classificacao": "12 anos",
    "orcamento": 200000000,
    "bilheteria": 300000000,
    "genero": ['Ação', 'Aventura', 'Fantasia', 'Ficção Científica'],
    "elenco": ['Gemma Chan', 'Angelina Jolie', 'Barry Keoghan',' Lia McHugh', 'Richard Madden', 'Kumail Nanjiani', 'Lauren Ridloff', 'Brian Tyree Henry'],
    "diretor": 'Chloé Zhao'
});

////////////////////////////////////////////


//
/* db.cliente.drop()
let schemaCliente = null     */

let schemaCliente = {
    required: ["nome", "dataNascimento", "login"],
    properties: {
        "nome": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "dataNascimento": {
            bsonType: "date",
            description: "must be a date type and required"  
        },
       "login": {
            bsonType: "objectId",
            description: "must be a objectId and required"  
        }

    }
}

db.createCollection("cliente", {validator: {$jsonSchema: schemaCliente}});

//com objectId primeiro ObjectId("61fdc04f619b0ff9db732e9c")
///////////////////////////////////
db.cliente.insertOne({
    "nome": "rui",
    "dataNascimento": new Date(1996,28,02),
    "login": ObjectId("61fdc04f619b0ff9db732e9c")
})

let schemaLogin = {
    required: ["email", "senha"],
    properties: {
        "email": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "senha": {
            bsonType: "string",
            description: "must be a string type and required"  
        }
    }
}

db.login.insertOne({
    "email": "sruy19@gmail.com",
    "senha": "123456789"
})
/////////////////////////////////////////////////
db.createCollection("login", {validator: {$jsonSchema: schemaLogin}});

let schemaIngresso = {
    required: ["dataCompra", "formaPagamento", "tipoIngresso", "nomeFilme", "poltrona", "sala", "sessao"],
    properties: {
        "dataCompra": {
            bsonType: "date",
            description: "must be a date type and required"
        },
        "formaPagamento": {
            bsonType: "string",
            description: "must be a string type and required",
            enum : ["Boleto", "Pix", "Cartão Crédito", "Cartão Débito"]
        },
        "tipoIngresso": {
            bsonType: "string",
            description: "must be a string type and required",
            enum : ["Meia", "Inteira"]
        },
        "nomeFilme": {
            bsonType: "string",
            description: "must be a string type and required",
        },
        "poltrona": {
            bsonType: "string",
            description: "must be a string type and required"
        },
        "sala": {
            bsonType: "string",
            description: "must be a string type and required"
        },
        "sessao": {
            bsonType: "date",
            description: "must be date type and required"
        }

    }
}
db.createCollection("ingresso", {validator: {$jsonSchema: schemaIngresso}});

db.ingresso.insertOne({
    "dataCompra": new Date(),
    "formaPagamento": "Pix",
    "tipoIngresso": "Inteira",
    "nomeFilme": "Star Wars",
    "poltrona": "F10",
    "sala": "A",
    "sessao": new Date(2022, 02, 05)
})

db.ingresso.insertOne({
	"dataCompra": new Date("2021-12-25"),
	"formaPagamento": "Boleto",
	"tipoIngresso": "Meia",
	"nomeFilme": "Venom Tempo de Carnificina",
	"poltrona": "A11",
	"sala": "B",
	"sessao": new Date("2021-12-26")
})


let schemaSala = {
    required: ["nomeSala", "capacidade"],
    properties: {
        "nomeSala": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "capacidade": {
            bsonType: "int",
            description: "must be a int and required"

        },

    }
}

db.createCollection("sala", {validator: {$jsonSchema: schemaSala}});

db.sala.insertMany([
    {"nomeSala": "A", "capacidade": 60},
    {"nomeSala": "B", "capacidade": 60},
    {"nomeSala": "C", "capacidade": 60},
    {"nomeSala": "D", "capacidade": 60},
    {"nomeSala": "E", "capacidade": 100},

])

let schemaSessao = {
    required: ["filme", "dataHora", "nomeSala"],
    properties: {
        "filme": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "dataHora": {
            bsonType: "date",
            description: "must be a date type and required"

        },
        "nomeSala": {
            bsonType: "string",
            description: "must be a string and required"
        }
    }
}

db.createCollection("sessao", {validator: {$jsonSchema: schemaSessao}});

db.sessao.insertOne({
	"filme": "Venom Tempo de Carnificina",
	"dataHora": new Date("2021-12-26"),
	"nomeSala": "B"
})

db.sessao.insertOne({
	"filme": "Star Wars",
	"dataHora": new Date("2022-03-05"),
	"nomeSala": "A"
})


let schemaLegenda = {
    required: ["legenda", "idiomaFilme", "nomeFilme"],
    properties: { 
       "legenda": {
            bsonType: "array",            
            description: "must be a object array and required",
            required:["idiomaLegenda", "tradutores"],
            properties: {
                "idiomaLegenda": {
                    bsonType: "string",
                    description: "must be a string and field is required"
                },
                "tradutores": {
                    bsonType: "array",
                    description: "must be a string if the field exists"
                    
                }
            }
        },
        "idiomaFilme": {
            bsonType: "array",
            description: "must be a array string and required"
        },
        "nomeFilme": {
            bsonType: "string",
            description: "must be a string and required"

        }
    }
}
db.createCollection("legenda", {validator: {$jsonSchema: schemaLegenda}});

/**
 *  properties: {
                "idiomaLegenda": {
                    bsonType: "string",
                    description: "must be a string and field is required"
                },
                "tradutores": {
                    bsonType: ["string"],
                    description: "must be a string if the field exists"
                    
                }
            }
 */


db.legenda.insertOne({
    "legenda": [
        {"idiomaLegenda": "Inglês", "tradutores": ["Ploop", "loop"]}, 
        {"idiomaLegenda": "Inglês", "tradutores": ["Ploop", "loop"]}
    ],
    "idiomaFilme": ["Ingles", "Portgues"],
    "nomeFilme": "Star Wars"    
})

db.legenda.insertOne({
    "legenda": ["Oi", "Eu" ],
    "idiomaFilme": "Ingles",
    "nomeFilme": "Star Wars"    
})

//===============================================================
let schemaEmBreve = {
    required: ["nomeFilme", "sinopse", "trailer", "dataEstreia", "duracao", "atores"],
    properties: {
        "nomeFilme": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "sinopse": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "trailer": {
            bsonType: "string",
            description: "must be a string and required"
        },
        "dataEstreia": {
            bsonType: "date",
            description: "must be a date type and required"

        },
        "duracao": {
            bsonType: "int",
            description: "must be a int and required"
        },
        "atores": {
            bsonType: "array",
            description: "must be a array string and required"
        }
    }
}

db.createCollection("embreve", {validator: {$jsonSchema: schemaEmBreve}});

db.embreve.insertMany([
    {
    "nomeFilme": "Homem-Aranha Sem Volta Para Casa",
    "sinopse": "Peter Parker é desmascarado e não consegue mais separar sua vida normal dos grandes riscos de ser um super-herói. Quando ele pede ajuda ao Doutor Estranho, os riscos se tornam ainda mais perigosos, e o forçam a descobrir o que realmente significa ser o Homem-Aranha.",
    "trailer": "https://youtu.be/voLgdwTP2TM",
    "dataEstreia": new Date("2021-12-16"),
    "duracao": 148,
    "atores": ["Tom Holland", "Benedict Cumberbatch", "Jon Favreau", "Willem Daffoe", "Zendaya", "Jacob Batalon", "Jamie Foxx", "Alfred Molina"]
    },
    {
    "nomeFilme": "Matrix Resurrections",
    "sinopse": "Da visionária realizadora Lana Wachowski chega-nos MATRIX RESURRECTIONS o tão aguardado 4º filme do inovador franchise que redefiniu o género. O novo filme reúne os protagonistas originais Keanu Reeves e Carrie-Anne Moss nos icónicos personagens que os tornaram famosos, Neo e Trinity.",
    "trailer": "https://www.youtube.com/watch?v=Wg7V2_OBXwQ",
    "dataEstreia": new Date("2021-12-22"),
    "duracao": 148,
    "atores": ["Keanu Reeves", "Laurence Fishburne", "Jessica Henwick", "Carrie Moss"]
    },
    {
    "nomeFilme": "007: Sem Tempo para Morrer",
    "sinopse": "James Bond deixa o MI6 e se muda para a Jamaica, mas um antigo amigo aparece e pede sua ajuda para encontrar um cientista desaparecido. Bond mergulha no caso e percebe que a busca é, na verdade, uma corrida para salvar o mundo.",
    "trailer": "https://www.youtube.com/watch?v=kCyjw0z-5KI",
    "dataEstreia": new Date("2021-09-30"),
    "duracao": 163,
    "atores": ["Daniel Craig", "Léa Seydoux", "Lashana Lynch", "Rami Malek"]
    },
    {
    "nomeFilme": "Duna",
    "sinopse": "Paul Atreides é um jovem brilhante, dono de um destino além de sua compreensão. Ele deve viajar para o planeta mais perigoso do universo para garantir o futuro de seu povo.",
    "trailer": "https://www.youtube.com/watch?v=dnBpZuSUISQ",
    "dataEstreia": new Date("2021-10-21"),
    "duracao": 155,
    "atores": ["Zendaya", "Timothee Chalamet", "Rebecca Ferguson", "Oscar Isaac"]
    }

])

//=====================================================

[
{
    idiomaleganda: "Ingles",
    tradutores: ["Ploop", "George"]
},

{
    idiomaLegenda: "Frances",
    tradutores: ["Fulano", "Ciclano"]
}
]